<?xml version="1.0"?>
<launch>
  <!-- Gazebo Model Path -->
  <env name="GAZEBO_MODEL_PATH" value="$(find ur5e_description)/models" />
  
  <!-- Gazebo Variables -->
  <arg name="limited" default="true"  doc="If true, limits joint range [-PI, PI] on all joints." />
  <arg name="paused" default="false" doc="Starts gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface" />
  <arg name="launch_gripper" default="true" />
  <arg name="world" default="$(find ur5e_description)/worlds/obstacle_object.world" />
  <arg name="extra_gazebo_args" default="--verbose" />
  
  <!-- Startup 
  ulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)" />
  </include>

  <!-- Load Robot -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find ur5e_description)/urdf/ur5e.urdf.xacro' transmission_hw_interface:=$(arg transmission_hw_interface)" />

  <!-- Push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.0" respawn="false" output="screen" />

  
  <include file="$(find ur_e_gazebo)/launch/controller_utils.launch"/>

  <!-- Start arm controller -->
  <rosparam file="$(find ur_e_gazebo)/controller/arm_controller_ur5e.yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
  
  <!-- Start gripper controller -->
  <group if="$(arg launch_gripper)">
    <rosparam file="$(find egh_gripper_description_new)/config/gripper_control.yaml" command="load"/>
    <param name="gripper_controller/joint" value="egh_gripper_finger_left_joint"/>
    
    <node name="controller_spawner_gripper" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="gripper_controller"/>
  </group>
  
  <!-- Load other controllers -->
  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller"/>
  

  <!-- Launch all contents below from ur5e_planning_execution.launch in moveit_config -->
  
  <include file="$(find ur5e_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
  </include>
  
  <!--
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
    <param name="publish_frequency" type="double" value="30.0" />
    <rosparam param="/source_list">[/joint_states]</rosparam>
  </node>-->

  <include file="$(find ur5e_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include file="$(find ur5e_moveit_config)/launch/moveit_rviz.launch">
    <arg name="rviz_config" value="$(find ur5e_moveit_config)/launch/moveit.rviz"/>
  </include>
  
  <!-- Launch all contents below from ready_robot.launch in motion_planning -->
  <node name="ready_robot" pkg="motion_planning" type="ready_robot.py" output="screen"/>
  
    <!-- Launch service to find world coordinates of pick and place objects -->
  <node name="pick_place_coordinates_service" pkg="motion_planning" type="pick_place_coordinates_service.py" output="screen"/>
  
</launch>
